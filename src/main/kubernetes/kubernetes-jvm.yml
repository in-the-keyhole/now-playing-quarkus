---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.quarkus.io/commit-id: 9ee5904841996c9e8fa54612a0c6414b397ef0ee
    app.quarkus.io/build-timestamp: 2023-07-07 - 16:34:38 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
  labels:
    app.kubernetes.io/name: now-playing-quarkus-jvm
    app.kubernetes.io/part-of: quarkus-demo
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.kubernetes.io/managed-by: quarkus
  name: now-playing-quarkus-jvm
  namespace: quarkus-demo
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: now-playing-quarkus-jvm
    app.kubernetes.io/part-of: quarkus-demo
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.quarkus.io/commit-id: 9ee5904841996c9e8fa54612a0c6414b397ef0ee
    app.quarkus.io/build-timestamp: 2023-07-07 - 16:34:38 +0000
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
  labels:
    app.kubernetes.io/managed-by: quarkus
    app.kubernetes.io/part-of: quarkus-demo
    app.kubernetes.io/name: now-playing-quarkus-jvm
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
  name: now-playing-quarkus-jvm
  namespace: quarkus-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: quarkus-demo
      app.kubernetes.io/name: now-playing-quarkus-jvm
      app.kubernetes.io/version: 1.0.0-SNAPSHOT
  template:
    metadata:
      annotations:
        app.quarkus.io/commit-id: 9ee5904841996c9e8fa54612a0c6414b397ef0ee
        app.quarkus.io/build-timestamp: 2023-07-07 - 16:34:38 +0000
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: http
      labels:
        app.kubernetes.io/managed-by: quarkus
        app.kubernetes.io/part-of: quarkus-demo
        app.kubernetes.io/name: now-playing-quarkus-jvm
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: redis
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgres-password
                  name: postgresql
          image: keyholesoftware/now-playing-quarkus:1.0.0-SNAPSHOT-jvm
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: now-playing-quarkus-jvm
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/started
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10